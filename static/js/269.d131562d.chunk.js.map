{"version":3,"file":"static/js/269.d131562d.chunk.js","mappings":"kSAEaA,EAAYC,EAAAA,EAAAA,IAAH,kDAITC,EAAcD,EAAAA,EAAAA,GAAH,kDAGXE,EAAeF,EAAAA,EAAAA,EAAH,iDAIZG,EAAQH,EAAAA,EAAAA,EAAH,gE,SCPLI,EAAU,WACnB,IAAOC,GAAMC,EAAAA,EAAAA,MAAND,GACP,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAsBA,OApBAC,EAAAA,EAAAA,YAAU,WAAM,wCAKZ,2FACED,GAAa,GADf,mBAG8BE,EAAAA,EAAAA,GAAc,CAAEC,OAAO,UAAD,OAAYC,OAAOV,GAAnB,cAHpD,OAGUW,EAHV,OAIIP,GAAW,SAAAQ,GAAI,OAAID,EAAYE,OAAhB,IAJnB,gDAMIC,QAAQC,IAAR,MANJ,yBAQIT,GAAa,GARjB,6EALY,sBACH,KAALN,GADQ,mCAiBZgB,EACD,GAAE,CAAChB,IAEiB,IAAnBG,EAAQc,QACH,SAACnB,EAAD,yBAGLK,EAAQc,OAAS,GAEjB,gCACGZ,IAAa,SAAC,KAAD,CACZa,OAAO,KACPC,MAAM,KACNC,MAAM,MACNC,UAAU,oBACVC,OAAO,IACPC,aAAa,SACbC,SAAS,IAGVrB,EAAQsB,KAAI,WAAoBC,GAApB,IAAEC,EAAF,EAAEA,OAAQC,EAAV,EAAUA,QAAV,OAA4B,SAACC,EAAD,CAAqBC,IAAKJ,EAAKC,OAAQA,EAAQC,QAASA,GAAxCF,EAA5C,YAbnB,CAiBH,EAEKG,EAAY,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,IAAKH,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,QAC7B,OAAO,UAAClC,EAAD,YACH,SAACE,EAAD,oBAAiBkC,EAAM,EAAvB,cAA8BH,MAC9B,SAAC9B,EAAD,UAAgB+B,MAEvB,C,kGCzDYpB,EAAa,mCAAG,WAAMuB,GAAN,mGACV,+BACD,mCAGdtB,EAMEsB,EANFtB,OALyB,EAWvBsB,EALFC,SAAAA,OANyB,MAMd,GANc,IAWvBD,EAJFE,KAAAA,OAPyB,MAOlB,eAPkB,IAWvBF,EAHFG,UAAAA,OARyB,MAQb,6BARa,IAWvBH,EAFFI,OAAAA,OATyB,MAShB,gBATgB,IAWvBJ,EADFK,KAAAA,OAVyB,MAUlB,EAVkB,EAarBC,EAbqB,UACV,gCADU,OAaD5B,EAbC,oBAEX,oCAFW,OAa2BuB,GAb3B,OAasCC,GAbtC,OAa6CC,GAb7C,OAayDC,EAbzD,iBAawEC,EAbxE,iCAcdE,EAAAA,EAAAA,IAAUD,GAAKE,MAAK,SAAAC,GAC/B,OAAOA,EAASC,IACjB,IAhB0B,mFAAH,qD","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.js","themoviedbApi.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const WrpReview = styled.div`\n    margin-bottom: 10px;\n`\n\nexport const TitleAuthor = styled.h3`\n    margin-bottom: 10px;\n`\nexport const ContentStyle = styled.p`\n    font-style: italic;\n`\n\nexport const Error = styled.p`\n    font-weight: 500;\n    color: red;\n`","import { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from 'react';\nimport { TailSpin } from  'react-loader-spinner'\nimport { themoviedbApi } from 'themoviedbApi';\nimport { WrpReview, TitleAuthor, ContentStyle, Error } from \"./Reviews.styled\"\n\nexport const Reviews = () => {\n    const {id} = useParams()\n    const [reviews, setReviews] = useState([])\n    const [isLoading, setIsLoading] = useState(false)\n\n    useEffect(() => {\n        if (id===''){\n          return\n        }\n  \n        async function fetchFilms(){\n          setIsLoading(true)\n          try {\n            const reviewsFilm = await themoviedbApi({ option: `/movie/${Number(id)}/reviews` });\n            setReviews(prev => reviewsFilm.results)                \n          } catch (error) {\n            console.log(error);\n          } finally {\n            setIsLoading(false)\n          }\n        }\n       \n        fetchFilms()\n      }, [id]);\n\n    if (reviews.length === 0){\n      return <Error>no reviews</Error>\n    }\n\n    if (reviews.length > 0){\n      return (\n        <>\n          {isLoading && <TailSpin\n            height=\"80\"\n            width=\"80\"\n            color=\"red\"\n            ariaLabel=\"tail-spin-loading\"\n            radius=\"1\"\n            wrapperClass=\"loader\"\n            visible={true}\n          />}\n    \n          {reviews.map(({author, content}, idx) => <OneReview key={idx} num={idx} author={author} content={content}/>)}\n        </>\n      );       \n    }    \n}\n\nconst OneReview = ({num, author, content})=>{\n    return <WrpReview>\n        <TitleAuthor>{`${num + 1} - ${author}`}</TitleAuthor>\n        <ContentStyle>{ content }</ContentStyle>\n    </WrpReview>\n}","import axios from 'axios';\n\nexport const themoviedbApi = async valueObj => {\n  const BASE_URL = 'https://api.themoviedb.org/3';\n  const API_KEY = '2e329d861e790504d655e6d7175d4c52';\n\n  const {\n    option,\n    nameFilm = '',\n    lang = '&language=en',\n    imageLang = '&include_image_language=en',\n    region = '&region=en-US',\n    page = 1,\n  } = valueObj;\n\n  const url = `${BASE_URL}${option}?api_key=${API_KEY}${nameFilm}${lang}${imageLang}${region}&page=${page}&include_adult=false`;\n  return await axios.get(url).then(response => {\n    return response.data;\n  });\n};\n"],"names":["WrpReview","styled","TitleAuthor","ContentStyle","Error","Reviews","id","useParams","useState","reviews","setReviews","isLoading","setIsLoading","useEffect","themoviedbApi","option","Number","reviewsFilm","prev","results","console","log","fetchFilms","length","height","width","color","ariaLabel","radius","wrapperClass","visible","map","idx","author","content","OneReview","num","valueObj","nameFilm","lang","imageLang","region","page","url","axios","then","response","data"],"sourceRoot":""}