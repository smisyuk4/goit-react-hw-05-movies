{"version":3,"file":"static/js/582.ca5b95f8.chunk.js","mappings":"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","sources":["components/GoBack/GoBack.styled.js","components/GoBack/GoBack.js","components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.js","themoviedbApi.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const LinkStyled = styled(Link)`\n    display: flex;\n    align-items: center;\n    margin-bottom: 10px;\n    width: 100px;\n    color: currentColor;\n    text-decoration: none;\n\n\n    svg {\n        margin-right: 10px;\n    }\n\n    &:hover, &:focus{\n        color: red;\n    }\n`","import { useLocation } from 'react-router-dom';\nimport { BiArrowBack } from \"react-icons/bi\";\nimport { LinkStyled } from \"./GoBack.styled\"\n\nexport const GoBack = ()=>{\n    const location = useLocation();\n    const backLinkRef = location.state?.from ?? '/'\n\n    return <LinkStyled to={backLinkRef} aria-label=\"go back\">\n                <BiArrowBack/>\n                Go back\n            </LinkStyled>\n}","import { NavLink } from \"react-router-dom\";\nimport styled from '@emotion/styled';\n\nexport const FilmMainInfo = styled.div`\n    display: flex;\n    gap: 10px;\n    margin-bottom: 15px;\n    max-width: 800px;  \n`\nexport const Poster = styled.img`\n    width: 100%;\n    height: 200px;\n    object-fit: cover;    \n\n    @media screen and (min-width: 425px) {\n        height: 300px;\n    }\n\n    @media screen and (min-width: 768px) {\n        height: 400px;\n    }\n`\n\nexport const Desc = styled.div`\n    max-width: 500px;\n`\n\nexport const FilmTitle = styled.h2`\n    margin-bottom: 10px;\n    font-size: 12px;\n\n    @media screen and (min-width: 320px) {\n        font-size: 18px;\n    }\n`\n\nexport const DescItem = styled.p`\n    margin-bottom: 10px;\n    font-size: 10px;\n\n    @media screen and (min-width: 320px) {\n        font-size: 16px;\n    }\n`\n\nexport const DescTitle = styled.span`\n    font-weight: 500;\n    color: orange;\n`\n\n// *************************\n\nexport const FilmSecondInfo = styled.ul`\n    display: flex;\n    gap: 20px;\n    padding: 5px;\n    margin-bottom: 15px;\n    background-color: pink;\n    box-shadow: rgba(0, 0, 0, 0.35) 0px -50px 36px -28px inset;\n`\n\nexport const NavLinkStyled = styled(NavLink)`\n    display: block;\n    padding: 5px;\n    color: currentColor;\n    text-decoration: none;  \n\n    &:hover, &:focus {\n        background-color: #dba1ab;\n        border-radius: 10px;\n    }\n\n    &.active {\n        text-decoration: underline;\n        font-weight: 500;\n        border-radius: 10px;\n    }\n`\n\n// ******************\n\nexport const SecondInfoWrap = styled.div`\n    padding: 10px;\n`","import { Outlet, useParams } from \"react-router-dom\";\nimport { useEffect, useState, Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { TailSpin } from  'react-loader-spinner'\nimport { GoBack } from \"components/GoBack\";\nimport { themoviedbApi } from 'themoviedbApi';\nimport defImageFilm from \"../../images/defImageFilm.jpg\"\nimport { FilmMainInfo, Poster, Desc, FilmTitle, DescItem, DescTitle, FilmSecondInfo, NavLinkStyled, SecondInfoWrap } from \"./MovieDetails.styled\"\n\n\n\nexport const MovieDetails = ()=>{\n    const {id} = useParams()\n    const [film, setFilm] = useState({});\n    const [imageLink, setImageLink] = useState(defImageFilm)\n    const [genres, setGenres] = useState([])\n    const [isLoading, setIsLoading] = useState(false)\n\n    useEffect(() => {\n      if (id===''){\n        return\n      }\n\n      async function fetchFilms(){\n        setIsLoading(true)\n        try {\n          const filmById = await themoviedbApi({ option: `/movie/${Number(id)}` });\n          const {poster_path, genres} = filmById\n\n          setFilm(filmById)\n\n          if(poster_path !==''){\n            setImageLink(prev => `https://image.tmdb.org/t/p/w500${poster_path}`) \n          }\n            \n            setGenres(prev => genres.map(({name}) => name)) \n        } catch (error) {\n          console.log(error);\n        } finally {\n          setIsLoading(false)\n        }\n      }\n     \n      fetchFilms()\n    }, [id]);\n\n    const {original_title, vote_average, overview} = film \n\n    return <div>\n            {isLoading && <TailSpin\n              height=\"80\"\n              width=\"80\"\n              color=\"red\"\n              ariaLabel=\"tail-spin-loading\"\n              radius=\"1\"\n              wrapperClass=\"loader\"\n              visible={true}\n            />}\n\n            <GoBack />\n\n            <FilmMainInfo>\n              <Poster src={imageLink} alt={original_title} width=\"200\" height=\"400\" loading=\"lazy\"/> \n              <Desc>\n                <FilmTitle>{original_title}</FilmTitle>\n                <DescItem><DescTitle>Rating: </DescTitle>{vote_average}</DescItem>\n                <DescItem><DescTitle>Overview: </DescTitle></DescItem>\n                <DescItem>{overview}</DescItem>\n                {genres.length > 0 &&  <DescItem><DescTitle>Genres: </DescTitle>{genres.join(', ')}</DescItem>}\n              </Desc>\n            </FilmMainInfo>\n\n            <FilmSecondInfo>\n              <li><NavLinkStyled to=\"cast\" aria-label=\"cast\">Cast</NavLinkStyled></li>\n              <li><NavLinkStyled to=\"reviews\" aria-label=\"reviews\">Reviews</NavLinkStyled></li>\n            </FilmSecondInfo>\n\n            <Suspense fallback={<div>Loading...</div>}>\n              <SecondInfoWrap>\n                <Outlet/>\n              </SecondInfoWrap>\n            </Suspense>\n            \n          </div>\n}\n\nMovieDetails.propTypes = {\n  id: PropTypes.string,\n}","import axios from 'axios';\n\nexport const themoviedbApi = async valueObj => {\n  const BASE_URL = 'https://api.themoviedb.org/3';\n  const API_KEY = '2e329d861e790504d655e6d7175d4c52';\n\n  const {\n    option,\n    nameFilm = '',\n    lang = '&language=en',\n    imageLang = '&include_image_language=en',\n    region = '&region=en-US',\n    page = 1,\n  } = valueObj;\n\n  const url = `${BASE_URL}${option}?api_key=${API_KEY}${nameFilm}${lang}${imageLang}${region}&page=${page}&include_adult=false`;\n  return await axios.get(url).then(response => {\n    return response.data;\n  });\n};\n"],"names":["LinkStyled","styled","Link","GoBack","backLinkRef","useLocation","state","from","to","FilmMainInfo","Poster","Desc","FilmTitle","DescItem","DescTitle","FilmSecondInfo","NavLinkStyled","NavLink","SecondInfoWrap","MovieDetails","id","useParams","useState","film","setFilm","defImageFilm","imageLink","setImageLink","genres","setGenres","isLoading","setIsLoading","useEffect","themoviedbApi","option","Number","filmById","poster_path","prev","map","name","console","log","fetchFilms","original_title","vote_average","overview","height","width","color","ariaLabel","radius","wrapperClass","visible","src","alt","loading","length","join","Suspense","fallback","valueObj","nameFilm","lang","imageLang","region","page","url","axios","then","response","data"],"sourceRoot":""}