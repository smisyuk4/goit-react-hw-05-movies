{"version":3,"file":"static/js/547.23789b12.chunk.js","mappings":"kPAKaA,EAAO,WAClB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,GACb,KACwBE,EAAAA,EAAAA,GAAc,CAAEC,OAAQ,wBAChCC,MAAK,gBAAGC,EAAH,EAAGA,QAAH,OAAiBP,EAASO,EAA1B,GAKpB,CAJC,MAAOC,GACPC,QAAQC,IAAIF,EACb,CALD,QAMEN,GAAa,EACd,CACF,GAAE,KAED,gCACGD,IAAa,SAAC,KAAD,CACZU,OAAO,KACPC,MAAM,KACNC,MAAM,MACNC,UAAU,oBACVC,OAAO,IACPC,aAAa,SACbC,SAAS,KAGX,SAACC,EAAA,EAAD,CAAUnB,MAAOA,MAGtB,C,gHChCYoB,EAAiBC,EAAAA,EAAAA,GAAH,gFAKdC,EAAOD,EAAAA,EAAAA,GAAH,qFAMJE,GAAgBF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,0O,SCTbF,EAAW,SAAC,GAAe,IAAbnB,EAAY,EAAZA,MACnByB,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACN,EAAD,UACGpB,EAAM2B,KAAI,SAAAC,GAAI,OACb,SAACN,EAAD,WACE,UAACC,EAAD,CAAeM,GAAE,kBAAaD,EAAKE,IAAMC,MAAO,CAAEC,KAAMP,GAAxD,WACE,SAAC,MAAD,IACCG,EAAKK,UAHCL,EAAKE,GADH,KAUpB,C,kGClBYzB,EAAa,mCAAG,WAAM6B,GAAN,mGACV,+BACD,mCAGd5B,EAME4B,EANF5B,OALyB,EAWvB4B,EALFC,SAAAA,OANyB,MAMd,GANc,IAWvBD,EAJFE,KAAAA,OAPyB,MAOlB,eAPkB,IAWvBF,EAHFG,UAAAA,OARyB,MAQb,6BARa,IAWvBH,EAFFI,OAAAA,OATyB,MAShB,gBATgB,IAWvBJ,EADFK,KAAAA,OAVyB,MAUlB,EAVkB,EAarBC,EAbqB,UACV,gCADU,OAaDlC,EAbC,oBAEX,oCAFW,OAa2B6B,GAb3B,OAasCC,GAbtC,OAa6CC,GAb7C,OAayDC,EAbzD,iBAawEC,EAbxE,iCAcdE,EAAAA,EAAAA,IAAUD,GAAKjC,MAAK,SAAAmC,GAC/B,OAAOA,EAASC,IACjB,IAhB0B,mFAAH,qD","sources":["Pages/Home/Home.js","components/FilmList/FilmList.styled.js","components/FilmList/FilmList.js","themoviedbApi.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { TailSpin } from  'react-loader-spinner'\nimport { themoviedbApi } from 'themoviedbApi';\nimport { FilmList } from 'components/FilmList';\n\nexport const Home = () => {\n  const [films, setFilms] = useState([]);\n  const [isLoading, setIsLoading] = useState(false)\n\n  useEffect(() => {\n    setIsLoading(true)\n    try {\n      const trandingFilms = themoviedbApi({ option: '/trending/movie/day' });\n      trandingFilms.then(({ results }) => setFilms(results));\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setIsLoading(false)\n    }\n  }, []);\n  return (\n    <>\n      {isLoading && <TailSpin\n        height=\"80\"\n        width=\"80\"\n        color=\"red\"\n        ariaLabel=\"tail-spin-loading\"\n        radius=\"1\"\n        wrapperClass=\"loader\"\n        visible={true}\n      />}\n\n      <FilmList films={films} />\n    </>\n  );\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const FilmListStyled = styled.ul`  \n    display: inline-block;  \n    margin-left: 25px;\n`\n\nexport const Film = styled.li`\n    &:not(:last-child){\n        margin-bottom: 5px;\n    }\n`\n\nexport const NavLinkStyled = styled(NavLink)`\n    display: flex;\n    align-items: center;        \n    text-decoration: none;\n    color: currentColor;\n\n    svg {\n        margin-right: 5px;\n    }\n\n    &:hover, &:focus {\n        color: red;\n    }\n`","import { useLocation } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport { SiCinema4D } from \"react-icons/si\";\nimport { FilmListStyled, Film, NavLinkStyled } from \"./FilmList.styled\"\n\nexport const FilmList = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <FilmListStyled>\n      {films.map(film => (\n        <Film key={film.id}>\n          <NavLinkStyled to={`/movies/${film.id}`} state={{ from: location }}>\n            <SiCinema4D/>\n            {film.title}\n          </NavLinkStyled>\n        </Film>\n      ))}\n    </FilmListStyled>\n  );\n};\n\nFilmList.propTypes = {\n  films: PropTypes.array.isRequired,\n};\n","import axios from 'axios';\n\nexport const themoviedbApi = async valueObj => {\n  const BASE_URL = 'https://api.themoviedb.org/3';\n  const API_KEY = '2e329d861e790504d655e6d7175d4c52';\n\n  const {\n    option,\n    nameFilm = '',\n    lang = '&language=en',\n    imageLang = '&include_image_language=en',\n    region = '&region=en-US',\n    page = 1,\n  } = valueObj;\n\n  const url = `${BASE_URL}${option}?api_key=${API_KEY}${nameFilm}${lang}${imageLang}${region}&page=${page}&include_adult=false`;\n  return await axios.get(url).then(response => {\n    return response.data;\n  });\n};\n"],"names":["Home","useState","films","setFilms","isLoading","setIsLoading","useEffect","themoviedbApi","option","then","results","error","console","log","height","width","color","ariaLabel","radius","wrapperClass","visible","FilmList","FilmListStyled","styled","Film","NavLinkStyled","NavLink","location","useLocation","map","film","to","id","state","from","title","valueObj","nameFilm","lang","imageLang","region","page","url","axios","response","data"],"sourceRoot":""}