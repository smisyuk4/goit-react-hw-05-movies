{"version":3,"file":"static/js/531.2624da5c.chunk.js","mappings":"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","sources":["components/FilmList/FilmList.styled.js","components/FilmList/FilmList.js","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.js","components/Movies/Movies.js","themoviedbApi.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const FilmListStyled = styled.ul`  \n    display: inline-block;  \n    margin-left: 25px;\n`\n\nexport const Film = styled.li`\n    &:not(:last-child){\n        margin-bottom: 5px;\n    }\n`\n\nexport const NavLinkStyled = styled(NavLink)`\n    display: flex;\n    align-items: center;        \n    text-decoration: none;\n    color: currentColor;\n\n    svg {\n        margin-right: 5px;\n    }\n\n    &:hover, &:focus {\n        color: red;\n    }\n`","import { useLocation } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport { SiCinema4D } from \"react-icons/si\";\nimport { FilmListStyled, Film, NavLinkStyled } from \"./FilmList.styled\"\n\nexport const FilmList = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <FilmListStyled>\n      {films.map(film => (\n        <Film key={film.id}>\n          <NavLinkStyled to={`/movies/${film.id}`} state={{ from: location }}>\n            <SiCinema4D/>\n            {film.title}\n          </NavLinkStyled>\n        </Film>\n      ))}\n    </FilmListStyled>\n  );\n};\n\nFilmList.propTypes = {\n  films: PropTypes.array.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n    position: relative; \n`\n\nexport const SearchInput = styled.input`\n    padding: 5px 30px 5px 5px;\n    font-size: 18px;\n    border-radius: 8px;\n    background-color: #e5d5d5;\n    box-shadow: rgba(14, 30, 37, 0.12) 0px 2px 4px 0px,\n        rgba(14, 30, 37, 0.32) 0px 2px 16px 0px;\n\n    &:hover,\n    &:focus {\n        background-color: #f09898;\n        cursor: pointer;\n    }\n`\n\nexport const Error = styled.p`\n    position: absolute;\n    bottom: 0;    \n    left: 0;\n    transform: translateY(35px);\n    color: red;\n`;\n\nexport const ButtonFind = styled.button`\n    position: absolute;\n    top: 0;    \n    right: 0;\n    transform: translate(-3px, 2px);\n    border: none;\n    background-color: inherit;\n          \n    svg:hover,\n    svg:focus {\n        color: red;\n        cursor: pointer;\n    }\n`;","import PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { IoMdSearch } from 'react-icons/io';\nimport { Label, SearchInput, Error, ButtonFind } from \"./SearchBox.styled\"\n\nconst VALIDATION_SCHEMA = yup\n  .object({\n    film: yup.string().min(3).max(20),\n  })\n  .required();\n\nexport const SearchBox = ({checkParams}) => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(VALIDATION_SCHEMA),\n  });\n  \n  const searchQuery = ({film}) => {\n    checkParams(film)\n    reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit(searchQuery)} autoComplete=\"off\">\n      <Label>\n        <SearchInput {...register('film', { required: true })}\n              title=\"Search film\"\n              placeholder=\"Search film\"/>\n\n              <Error>{errors.film?.message}</Error>\n              <ButtonFind type='submit'><IoMdSearch size={20}/></ButtonFind>\n        </Label>      \n    </form>\n  );\n};\n\nSearchBox.propTypes = {\n  checkParams: PropTypes.func.isRequired,\n};\n","import { useSearchParams } from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\nimport { TailSpin } from  'react-loader-spinner'\nimport { themoviedbApi } from 'themoviedbApi';\nimport { SearchBox } from 'components/SearchBox';\nimport { FilmList } from \"components/FilmList\";\n\nexport const Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const filmName = searchParams.get(\"film\") ?? \"\";\n  const [films, setFilms] = useState([]);\n  const [isLoading, setIsLoading] = useState(false)\n\n  useEffect(() => {\n    if (filmName===''){\n      return\n    }\n\n    async function fetchFilms(){\n      setIsLoading(true)\n      try {\n        const filmsByName = await themoviedbApi({ option: '/search/movie', nameFilm: `&query=${filmName}` });\n        console.log(filmsByName.results)\n\n        setFilms(prev => filmsByName.results)                \n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false)\n      }\n    }\n   \n    fetchFilms()\n  }, [filmName]);\n\n  const checkParams = (film) => {\n    console.log(film)\n    const nextParams = film !== \"\" ? { film } : {};\n      setSearchParams(nextParams);\n  };\n\n  return (\n    <>\n      {isLoading && <TailSpin\n          height=\"80\"\n          width=\"80\"\n          color=\"red\"\n          ariaLabel=\"tail-spin-loading\"\n          radius=\"1\"\n          wrapperClass=\"loader\"\n          visible={true}\n        />}\n\n      {films.length === 0 ? <SearchBox checkParams={checkParams}/> : <FilmList films={films}/>}      \n    </>\n  );\n};\n\n// export default Movies","import axios from 'axios';\n\nexport const themoviedbApi = async valueObj => {\n  const BASE_URL = 'https://api.themoviedb.org/3';\n  const API_KEY = '2e329d861e790504d655e6d7175d4c52';\n\n  const {\n    option,\n    nameFilm = '',\n    lang = '&language=en',\n    imageLang = '&include_image_language=en',\n    region = '&region=en-US',\n    page = 1,\n  } = valueObj;\n\n  const url = `${BASE_URL}${option}?api_key=${API_KEY}${nameFilm}${lang}${imageLang}${region}&page=${page}&include_adult=false`;\n  return await axios.get(url).then(response => {\n    return response.data;\n  });\n};\n"],"names":["FilmListStyled","styled","Film","NavLinkStyled","NavLink","FilmList","films","location","useLocation","map","film","to","id","state","from","title","Label","SearchInput","Error","ButtonFind","VALIDATION_SCHEMA","yup","min","max","required","SearchBox","checkParams","useForm","resolver","yupResolver","register","handleSubmit","reset","errors","formState","onSubmit","autoComplete","placeholder","message","type","size","Movies","useSearchParams","searchParams","setSearchParams","filmName","get","useState","setFilms","isLoading","setIsLoading","useEffect","themoviedbApi","option","nameFilm","filmsByName","console","log","results","prev","fetchFilms","height","width","color","ariaLabel","radius","wrapperClass","visible","length","valueObj","lang","imageLang","region","page","url","axios","then","response","data"],"sourceRoot":""}